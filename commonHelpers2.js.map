{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst myInput = document.querySelector('#datetime-picker');\nconst start_button = document.querySelector('[data-start]');\nconst days_counter = document.querySelector('[data-days]');\nconst hours_counter = document.querySelector('[data-hours]');\nconst minutes_counter = document.querySelector('[data-minutes]');\nconst seconds_counter = document.querySelector('[data-seconds]');\nlet countdownInterval = 0;\n\nstart_button.disabled = true;\nlet targetDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    targetDate = selectedDates[0];\n    if (targetDate < new Date()) {\n      start_button.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topLeft',\n      });\n    } else {\n      start_button.disabled = false;\n    }\n  },\n};\n\nconst fp = flatpickr(myInput, options); // flatpickr\n\nstart_button.addEventListener('click', () => {\n  start_button.disabled = true;\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const timeLeft = targetDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(countdownInterval);\n      iziToast.success({\n        title: 'BINGO',\n        message: 'Time is up!',\n        position: 'topLeft',\n      });\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    days_counter.textContent = `${addLeadingZero(days)}`;\n    hours_counter.textContent = `${addLeadingZero(hours)}`;\n    minutes_counter.textContent = `${addLeadingZero(minutes)}`;\n    seconds_counter.textContent = `${addLeadingZero(seconds)}`;\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["myInput","start_button","days_counter","hours_counter","minutes_counter","seconds_counter","countdownInterval","targetDate","options","selectedDates","iziToast","flatpickr","timeLeft","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAe,SAAS,cAAc,aAAa,EACnDC,EAAgB,SAAS,cAAc,cAAc,EACrDC,EAAkB,SAAS,cAAc,gBAAgB,EACzDC,EAAkB,SAAS,cAAc,gBAAgB,EAC/D,IAAIC,EAAoB,EAExBL,EAAa,SAAW,GACxB,IAAIM,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAaE,EAAc,CAAC,EACxBF,EAAa,IAAI,MACnBN,EAAa,SAAW,GACxBS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,SAClB,CAAO,GAEDT,EAAa,SAAW,EAE3B,CACH,EAEWU,EAAUX,EAASQ,CAAO,EAErCP,EAAa,iBAAiB,QAAS,IAAM,CAC3CA,EAAa,SAAW,GACxBK,EAAoB,YAAY,IAAM,CAEpC,MAAMM,EAAWL,EADL,IAAI,KAGhB,GAAIK,GAAY,EAAG,CACjB,cAAcN,CAAiB,EAC/BI,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,cACT,SAAU,SAClB,CAAO,EACD,MACD,CACD,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAC5DV,EAAa,YAAc,GAAGgB,EAAeL,CAAI,CAAC,GAClDV,EAAc,YAAc,GAAGe,EAAeJ,CAAK,CAAC,GACpDV,EAAgB,YAAc,GAAGc,EAAeH,CAAO,CAAC,GACxDV,EAAgB,YAAc,GAAGa,EAAeF,CAAO,CAAC,EACzD,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}